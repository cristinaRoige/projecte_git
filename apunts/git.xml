<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    version="5.0">
    <info>
        <title>Comandes terminal Windows</title>
        <author>
            <personname>
                <firstname>Cristina</firstname>
                <surname>Roigé Gaja</surname>
            </personname>
        </author>
    </info>
    <sect1>
        <title>Que és git</title>
        <para>Git és un programa de control de versions que ha estat pensat per tindre una gran
            eficiència i confiabilitat del manteniment de versions de les nostres
            aplicacions.</para>
        <para>Git l'utilitzarem per tindre control i registrar els canvis realitzats sobre un o
            diversos arxius de manera que si ens equivoquem o volem recuperar alguna versió antigua
            ho tinguem més fàcil que gestionant còpies de seguretat a pel.</para>
    </sect1>
    <sect1>
        <title>Instal·lar GIT a Windows</title>
        <para>Per instal·lar GIT a windows una de les maneres que hi ha és anant a la següent pàgina
                <link xlink:href="https://git-scm.com/"/> i descarregar la versió de Windows. un cop
            descarregat a baixades executarem el fitxer i el configurarem com volguem.</para>
        <para>Un cop instal·lat podem veure la versió que tinguem instal·lada</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/001.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para/>
    </sect1>
    <sect1>
        <title>Configurar git</title>
        <para>Quan instal·lem GIT entre altres també s'ens instala GIT bash que es una
            consola.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/002.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/003.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Aquí també podem veure la versió que tenim de GIT amb la comanda<code> GIT
                --version</code></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/004.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Configurarem GIT amb el nom d'usuari i el compte de correu electrónic ja que tots els
            commits de GIT utilitzaran aquesta informació.</para>
        <para><code>git config –-global user.name "nom usuari"</code></para>
        <para><code>git config --global user.email nomUsuari@organitzacio.tipus</code>
        </para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/005.jpg"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Amb la variable <code>--global</code> GIT utilitza informació per tot el sistema.
            també podem configurar:</para>
        <itemizedlist>
            <listitem>
                <para>Editor de text →<code> git config –-global core.editor nomEditor</code></para>
            </listitem>
            <listitem>
                <para>Eina per resoldre conflictes per resoldre <emphasis role="bold"
                        >merge</emphasis> → <code>git config –-global merge.tool
                    nomEina</code></para>
            </listitem>
        </itemizedlist>
        <para>Per comprovar la configuració hem de fer la següent comanda → <code>git config –-list
            </code></para>
        <para>Per poder veure les comandes que té GIT → <code>git help </code></para>
    </sect1>
    <sect1>
        <title>Crear repositori</title>
        <para>Per crear un repositori el primer que hem fet és crear una carpeta a qualsevol lloc
            que volguem i dins aquesta hem fet els següents fitxers:</para>
        <itemizedlist>
            <listitem>
                <para>Carpeta apunts en aquesta carpeta hi hauran els apunts que estic fent per
                    GIT.</para>
            </listitem>
            <listitem>
                <para>Carpeta projecte on hi haurà un exemple de projecte web</para>
            </listitem>
        </itemizedlist>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/006.jpg"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>De moment tenim text a index.htmli pagina1.html</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/007.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/008.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Per iniciar un repositori (projecte) anirem a la carpeta que tinguem el
            projecte:</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/009.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/010.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Per iniciar un repositori hem d'escriure la comanda de GIT → <code>git init</code>
            podem veure que s'ens ha creat una carpeta oculta que es diu .git.</para>
        <para>Per llistar els fitxer la comanda és <code>ls</code> i si volem veure els fitxers
            ocults <code>ls -la</code></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/011.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/012.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para/>
    </sect1>
    <sect1>
        <title>Clonar repositoris</title>
        <para>Podem crear un repositori clonant un que ja existeixi i es pot fer de dues formes o
            clonant un repositori local o bé un repositori remot.</para>
        <para>Clonar repositori local → <code>git clone ./rutaRelativa nomNovaCarpeta.</code> es
            clonarà però es clonarà buit.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/013.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Per clonar un repositori que tinguem a internet:</para>
        <para>
            <code>git clone https://github.com/nomrepositori/nomProjecte.git
                ./nomNovaCarpeta.</code>
        </para>
        <para>Podem veure que el nostre repositori es clonarà.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/015.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
    </sect1>
    <sect1>
        <title>Espai de treball a GIT</title>
        <para>La comanda <code>git status</code> mostra tot el que hi ha dins de l'index.</para>
        <para>Ens indica a quina branca estem, en aquest cas la branch master ens diu que no hem fet
            cap commit i els untracked files (fitxers que no estan inclosos per fer el commit,
            directori de treball).</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/016.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Si volem fer un commit amb algun d'aquest fitxers el que hem de fer es fer servir la
            següent comanda:</para>
        <para><code>git add nomCarpetaODirectori</code></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/017.jpg"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Si ara fem un <code>git status</code> podem veure la safata de sortida (stading index)
            els fitxers i carpetes que estan apunt de rebre el commit.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/018.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>També podem veure untracked files. aquestes carpetes i fitxers estan pendents de
            passar a la safata de sortida i si ara mateix fessim un commit aquest fitxers no
            s'inclourien en aquest.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/019.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Si volguessim esborrar algun fitxer de la safata de sortida i no incloure'l en el
            següent commit hauriem de fer servir la comanda:</para>
        <para><code>git rm –-cached &lt;nomArxiuODirectori></code></para>
        <para>Si volguessim afegir tots els fitxers de cop al següent commit fariem servir la
            comanda </para>
        <para><code>git add .</code></para>
    </sect1>
    <sect1>
        <title>Comandes status add dif</title>
        <para>Si fem dos canvis als fitxers index.html i pagina1.html i després fem un GIT status
            podem veure que aquests dos fitxers estàn al nostre directori de treball i no estaran
            inclosos en el commit. si fem GIT add al fitxer index.html podem veure que només ens
            queda el fitxer pagina1.html al directori de treball.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/020.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/021.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/022.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Si no ens agraden els canvis que hem fet en aquesta pàgina poem utilitzar la comanda </para>
        <para><code>git checkout pagina1.html</code></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/023.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>podem veure que a la safata de sortida ja no ens hi queda res.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/024.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Si tornem a fer canvis a la pàgina1.html guardem i a la consola tornem a fer GIT
            status podem veure que la pagina1.html s'ha modificat.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/025.jpg"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Si volem veure els canvis que s'han produït hem d'utilitzar la comanda</para>
        <para><code>git diff nomCarpetaOArxiu</code></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/026.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>En vermell podem veure com estava abans i en verd com està ara.</para>
    </sect1>
    <sect1>
        <title>fitxer gitignore</title>
        <para>El fitxer gitignore serveix perquè una carpeta o arxiu no es guardi mai en un
            commit.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/027.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>hem d'escriure la ruta de la carpeta des del directori de treball</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/028.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Si fem <code>git status</code> ara podem veure aquest fitxer que podem fer commit i
            que evita que els fitxers que estan dins no s'afegeixin mai.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/029.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
    </sect1>
    <sect1>
        <title>Comanda commit i versions</title>
        <para>Un commit és una versió del programa actual, un punt de partida al nostre codi que
            podrem tornar sempre que volguem i comparar-lo amb altres versions que tinguem. </para>
        <para>Un cop tinguem tots els fitxers a la safata de sortida després de fer un add hem
            d'utlitzar la següent comanda:</para>
        <para><code>git commit -m "comentari identificatiu del comit actual"</code></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/030.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Si fem git status veiem que no hi ha cap commit per fer.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/031.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Si fem servir la comanda</para>
        <para><code>git log --oneline</code> veurem aquest commit.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/032.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Si fem <code>git log</code> podrem veure tota la informació del commit</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/033.jpg"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Si fem canvis al fitxer index.html i al fitxer pagina1.html podem <emphasis>si estem
                molt segurs que podem fer els canvis</emphasis> podem fer servir la comanda
                <code>git commit -am "comentari identificatiu del commit actual</code>.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/034.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Si tornem a fer <code>git log</code> podem veure l'historial dels commits.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/035.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Per comparar dos commits es fa servir la comanda <code>git diff idCommit1
                idCommit2</code></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/036.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Podem veure els canvis que hi ha hagut entre els dos commits. en vermell el que s'ha
            canviat en verd el que s'ha eliminat.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/037.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para/>
    </sect1>
    <sect1>
        <title>Comandes reset i checkout</title>
        <para>Si fem un canvi a un fitxer, per exemple a index.html si per error fem la comanda
                <code>git add .</code> i ens adonem que ens hem equivocat i el volem tornar al
            directori de treball podem fer servir la comanda <code>git reset HEAD nomFitxer</code> o
            bé també podem fer servir la comanda <code>git reset .</code> o bé <code>git checkout
                nomFitxer</code></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/038.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/039.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
    </sect1>
    <sect1>
        <title>Desfer un commit</title>
        <para>Per veure la comanda reset que es fa servir per desfer un commit hem fet diverses
            modificacions i diversos commits</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/040.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>La comanda <code>git reset --hard HEAD</code> reseteja el directori de treball a
            l'últim estat al que estavem treballant.</para>
        <para>Si volem desfer el útlim commit, en el nostre cas cc6230e hem d'escriure la comanda. </para>
        <para><code>git reset --hard HEAD~numCommitsQueVolemTornarEnrera</code></para>
        <para>Per exemple en el nostre cas <code>$ git reset --hard HEAD~1</code>  esborrarà l'últim
            commit.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/041.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Hem de tindre en compte que els commits es compten a partir de 0.</para>
        <para>Si volem esborrar uns commit farem <code>git reset --hard idComit</code> això ens
            esborrarà des del HEAD fins al commit anterior al que hem posat de ID</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/042.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Si no fem servir el parametre hard la diferència és que desfem el commit però el codi
            queda intacte als fitxers.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/043.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/044.jpg"/>
                </imageobject>
            </inlinemediaobject></para>
    </sect1>
    <sect1>
        <title>Tornar a un commit anterior</title>
        <para>Si volem canviar el HEAD dels commits i que aquest sigui el nostre últim commit hem de
            fer servir la comanda</para>
        <para><code>git checkout idCommit</code></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/045.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Els commits anteriors no han desaparegut i els podem tornar a recuperar.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/046.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/047.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
    </sect1>
    <sect1>
        <title>Buscar un commit </title>
        <para>Per buscar un commit en concret </para>
        <para><code>git log --grep="paraules clau"</code></para>
        <para><code>git log --oneline --grep="paraules clau"</code></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/048.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>També podem buscar els commits per el contingut dels fitxers.</para>
        <para><code>git log -S "paraules clau"</code></para>
        <para><code>git log --oneline -S "paraules clau"</code></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/049.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para/>
    </sect1>
    <sect1>
        <title>Branch</title>
        <para>Les branques (blanch) de desenvolupament permeten ramificar el nostre projecte i
            tindre diferents línies de desenvolupament, podent desenvolupar altres funcionalitats
            sense que unes interfereixin amb les altres.</para>
        <para>El més normal és tindre una branch master i mentres anem desenvolupant el projecte
            sorgeixen noves funcionalitats i nosaltres no volem barrejar aquestes funcionalitats amb
            la branch master o qualsevol altre branca de desenvolupament.</para>
        <para>Per crear una nova branca farem servir:</para>
        <para><code>git branch nomBranca</code></para>
        <para>Per veure si s'ha creat la branca:</para>
        <para><code>git branch</code></para>
        <para>Per canviar d'una branca a una altra branca</para>
        <para><code>git checkout nomBranca</code></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/050.jpg"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Fem els canvis preparem i fem el commit i quan fem git log --oneline podem veure que
            estem a la branca que hem creat que allí hem fet el nostre commit. i la branca master i
            la branca pagina1 no es el mateix.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/051.jpg"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Crearem una branca nova per veure la comanda d'esborrar. aquesta branca es dirà
            brancaError</para>
        <para><code>git branch -D nomBrancaAEsborrar</code></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/052.jpg"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Si hi hagués algun commit fet dins la branca no ens ho deixaria esborrar ni canviar de
            branca i primer ens faria un commit.</para>
        <para>Quan hagim acabat de treballar a una branca i volguem passar el nostre codi a la
            branca master haurem d'anar a la nostra branca principal i fer un merge, el merge també
            serveix per passar el codi de la branca master a la branca que esteu treballant.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/053.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para><code>git merge nomBranca</code></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/054.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Si ara faig un git log veurem que haurem importat els commits fets a la branca que hem
            importat a la branca master.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/055.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
    </sect1>
    <sect1>
        <title>Comanda stash</title>
        <para>la comanda stash permet canviarte a una altra branca que estiguis treballant sense
            emportar-te els canvis que has fet a la pàgina que estaves treballant.</para>
        <para>Imaginem-nos que estem treballan a la branca principal al fitxer index.html i li fem
            un canvi. ens ve el jefe i diu deixa el que estas fent i arregla'm la pàgina1.html. el
            que hauriem de fer és un stash que ens guardaria els canvis fets al fitxer index.html i
            els podrem guardar més endavant.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/056.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/057.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/058.jpg"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Ens podem canviar de branca i si fem un <code>git status</code> podem veure que no ens
            hem emportat res de l'altra branca.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/059.jpg"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>La memoria stash es global així que estant a la branca pagina1 fem <code>git stash
                show</code> veurem que els canvis continuen pendents</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/060.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Fem els canvis que ens han demanat.</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/061.jpg"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Podem fer add i commit</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/062.jpg"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Podem veure que tenim el commit fet</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/063.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Tornem a la branca master i podem veure que en el stash encara tenim els canvis
            pendents</para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/065.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Treiem el que teniem a la memoria i els recuperem a l'index</para>
        <para><code>git stash pop</code></para>
        <para><inlinemediaobject>
                <imageobject>
                    <imagedata fileref="img/066.jpg" align="center" scale="100"/>
                </imageobject>
            </inlinemediaobject></para>
        <para>Per netejar la memoria stash <code>git stash clear</code></para>
    </sect1>
    <sect1>
        <title>Comanda cherry-pick</title>
        <para></para>
        <para>La comanda cherry-pick serveix per fer un merge parcial, això significa que podem
            estar treballant en una branca, fer la nostra feina amb els commits que ens convinguin i
            en un moment donat tindre que tornar a la branca que sigui i tindre que exportar només
            alguns canvis dels que s'estaven fent. </para>
        <para>A continuació farem un exemple de la comanda cherry-pick</para>
        <orderedlist>
            <listitem>
                <para>Mirem a la branca que estem i com ho tenim.</para>
                <figure>
                    <title><code>comanda → git status</code>.</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="img/067.jpg" scale="100" align="center"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </listitem>
            <listitem>
                <para>Crearem un altre full que anomenarem contacte.html i a la pàgina index.html
                    crearem un link per anar aquesta fulla i tornarem a mirar com tenim el nostre
                    directori de treball (working directory) i el nostre index (stage)</para>
                <figure>
                    <title><code>comanda → git status</code>.</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="img/068.jpg" scale="100" align="center"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </listitem>
            <listitem>
                <para>Preparem els dos arxius per el commit</para>
                <figure>
                    <title><code>comanda → git add nomArxiu nomArxiu</code>.</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="img/069.jpg" scale="100" align="center"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </listitem>
            <listitem>
                <para>Fem el commit</para>
                <figure>
                    <title><code>comanda → git commit -m "missatge descriptiu
                        commit"</code>.</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="img/070.jpg" scale="100" align="center"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </listitem>
            <listitem>
                <para>Crearem una nova branca per crear un formulari de contacte</para>
                <figure>
                    <title><code>comanda → git add nomArxiu nomArxiu</code>.</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="img/071.jpg" scale="100" align="center"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </listitem>
            <listitem>
                <para>Mirarem com tenim el directori de treball i les branch</para>
                <figure>
                    <title><code>comanda → git status</code>. i <code>git branch</code></title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="img/072.jpg" scale="100" align="center"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </listitem>
            <listitem>
                <para>Ens canviarem de branca</para>
                <figure>
                    <title><code>comanda → git checkout nomBrancaACanviar</code>. i <code>git
                            status</code></title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="img/073.jpg" scale="100" align="center"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </listitem>
            <listitem>
                <para>Afegim un quants commits des d'aquesta branca comprovem el directori de
                    treball i els commits que hem fet. veiem que hem fet un formulari amb nom i
                    contrasenya i un submit </para>
                <figure>
                    <title><code>comanda → git status</code>. i <code>git log
                        --oneline</code></title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="img/074.jpg" scale="100" align="center"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </listitem>
            <listitem>
                <para>Ens canviarem de branca</para>
                <figure>
                    <title><code>comanda → git checkout nomBrancaACanviar</code>. i <code>git
                        status</code></title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="img/075.jpg" scale="100" align="center"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </listitem>
            <listitem>
                <para>Si mirem els commits podem comparar les dues branques, podem veure que a la
                    branca master no hi ha els commits que hem fet a la branca contacte.</para>
                <figure>
                    <title>comanda →<code> git log --oneline</code></title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="img/076.jpg" scale="100" align="center"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </listitem>
            <listitem>
                <para>Volem que els commits referents al formulari passin a la branca master, però
                    que els que afegeixen els 3 paràgraf no.</para>
                <figure>
                    <title>comanda →<code> git cherry-pick idCommit</code></title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="img/077.jpg" scale="100" align="center"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </listitem>
            <listitem>
                <para>Veurem que hi ha un conflicte I l'haurem de resoldre (com resoldre conflictes
                    s'explica després) el resolem, (només es resol a la branca master).</para>
                <figure>
                    <title>comanda →<code> git status</code></title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="img/078.jpg" scale="100" align="center"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </listitem>
            <listitem>
                <para>Un cop resolt el conflicte ja podrem fer el commit </para>
                <figure>
                    <title>comanda →<code> git add .</code> I <code>git commit -m "missatge
                            descriptiu commit"</code></title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="img/078.jpg" scale="100" align="center"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </listitem>
        </orderedlist>
    </sect1>
    <sect1>
        <title>Resolució de conflictes.</title>
        <para></para>
    </sect1>
</article>
